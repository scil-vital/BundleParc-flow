process {
    cpus = { check_max(4, 'cpus') }
    memory = { check_max(4.GB, 'memory') }
    time = { check_max(2.h, 'time') }

    withLabel: process_single {
        cpus = { check_max(1, 'cpus') }
    }

    withLabel: process_low {
        cpus = { check_max(2, 'cpus') }
    }

    withLabel: process_medium {
        cpus = { check_max(4, 'cpus') }
    }

    withLabel: process_high {
        cpus = { check_max(8, 'cpus') }
    }

    withLabel: process_long {
        time = { check_max(20.h, 'time') }
    }

    withLabel: process_high_memory {
        memory = { check_max(16.GB, 'memory') }
    }

}

profiles {
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
    }
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
    }
    podman {
        podman.enabled = true
        podman.userEmulation = true
        podman.runOptions = "--runtime crun --platform linux/x86_64 --systemd=always"
    }
    docker {
        docker.enabled = true
        docker.runOptions = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    docker_self_hosted{
        docker.enabled = true
        docker.fixOwnership = true
        docker.runOptions = '--platform=linux/amd64'
    }
    docker_self_hosted_bigmem{
        docker.enabled = true
        docker.fixOwnership = true
        docker.runOptions = '--platform=linux/amd64'
    }
    arm {
        docker.runOptions       = '-u $(id -u):$(id -g) --platform=linux/amd64'
    }
    gpu {
        docker.runOptions       = '-u $(id -u):$(id -g) --gpus all'
        apptainer.runOptions    = '--nv'
        singularity.runOptions  = '--nv'
    }
    conda {
        conda.enabled           = true
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
    }
}

manifest {
    nextflowVersion = '!>=23.04.0'
}

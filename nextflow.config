profiles {
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g) --gpus all'
    }
}

manifest {
    name            = 'scilus/nf-neuro-tutorial'
    description     = """nf-neuro-tutorial is a Nextflow pipeline for processing neuroimaging data."""
    version         = '0.1dev'
}

// ** Input/Output params **
params.fodf = false
params.dwi = false
params.output     = 'result'

// ** BundleParc params ** 
params.nb_pts = 10
params.checkpoint = false

//**Global options**//
params.b0_max_threshold                                = 10
params.bvalue_tolerance                                = 20

//**SH fitting**//
params.dwi_signal_sh_fit                               = true
params.dwi_signal_sh_fit_order                         = 6
params.dwi_signal_sh_fit_basis                         = "descoteaux07"
params.dwi_signal_sh_fit_shell                         = null

//**Denoise dwi (dwidenoise in Mrtrix3)**//
params.preproc_dwi_run_denoising                       = true
params.dwi_denoise_patch_size                          = 7

//**GIBBS CORRECTION (mrdegibbs in Mrtrix3)**//
params.preproc_dwi_run_degibbs                         = false

//**Topup**//
params.topup_eddy_run_topup                            = true
params.dwi_topup_config_file                           = "b02b0.cnf"

//**Eddy**//
params.topup_eddy_run_eddy                             = true
params.dwi_eddy_executable                             = "eddy" // eddy_cuda11.0
params.dwi_eddy_restore_slices                         = true

//**Normalize DWI**//
params.preproc_dwi_run_N4                              = true
params.dwi_n4_knot_interval                            = 8
params.dwi_n4_subsampling                              = 2

//**Resample DWI**//
params.preproc_dwi_run_resampling                      = true
params.dwi_resample_resolution_mm_iso                  = 1
params.dwi_resample_interpolation                      = "lin"

//**Extract DTI shells using this value as maximum**//
params.dti_max_bvalue                                  = 1200
params.dti_shells_to_fit                               = null

//**Extract fODF shells using this value as minimum**//
params.fodf_min_bvalue                                 = 700
params.fodf_shells_to_fit                              = null

//**Compute fiber response function (frf)**//
params.frf_fa_max_threshold                            = 0.7
params.frf_fa_min_threshold                            = 0.5
params.frf_min_n_voxels                                = 300
params.frf_roi_radius                                  = 20
params.frf_value_to_force                              = null

//**Mean fiber response function (frf)**//
params.frf_average_from_data                           = false

//**Compute fODF metrics**//
params.fodf_sh_order                                   = 8
// Super important don't modify this
params.fodf_sh_basis                                   = "descoteaux07_legacy"
params.fodf_peaks_absolute_factor                      = 2.0
params.fodf_peaks_relative_threshold                   = 0.1
params.fodf_peaks_ventricle_max_fa                     = 0.1
params.fodf_peaks_ventricle_min_md                     = 0.003

process {
    publishDir = { "${params.output}/$meta.id/${task.process.replaceAll(':', '-')}" }

    withName: "BUNDLE_BUNDLEPARC" {
        ext.nb_pts = params.nb_pts
    }
    /* SUBWORKFLOWS CONFIGURATION */

    withName: "PREPROC:PREPROC_DWI:DENOISE_DWI" {
        ext.extent = params.dwi_denoise_patch_size
    }

    withName: "PREPROC:PREPROC_DWI:DENOISE_REVDWI" {
        ext.extent = params.dwi_denoise_patch_size
    }

    withName: "PREPROC:PREPROC_DWI:TOPUP_EDDY:UTILS_EXTRACTB0" {
        ext.b0_extraction_strategy = "mean"
    }

    withName: "PREPROC:PREPROC_DWI:TOPUP_EDDY:PREPROC_TOPUP" {
        ext.prefix_topup            = "topup_results"
        ext.default_config_topup    = params.dwi_topup_config_file
        ext.encoding                = "y"  //FIXME : this is subject bound, pass through meta ?
        ext.readout                 = 0.062 //FIXME : this is subject bound, pass through meta ?
        ext.b0_thr_extract_b0       = params.b0_max_threshold
    }

    withName: "PREPROC:PREPROC_DWI:TOPUP_EDDY:PREPROC_EDDY" {
        ext.prefix_topup                            = "topup_results"
        ext.slice_drop_flag                         = params.dwi_eddy_restore_slices
        ext.bet_topup_before_eddy_f                 = 0.16
        ext.eddy_cmd                                = params.dwi_eddy_executable
        ext.dilate_b0_mask_prelim_brain_extraction  = 5
        ext.bet_prelim_f                            = 0.16
        ext.b0_thr_extract_b0                       = params.b0_max_threshold
        ext.encoding                                = "y"  //FIXME : this is subject bound, pass through meta ?
        ext.readout                                 = 0.062 //FIXME : this is subject bound, pass through meta ?
    }

    withName: "PREPROC:PREPROC_DWI:BETCROP_FSLBETCROP" {
        ext.bet_f   = 0.16
        ext.b0_thr  = params.b0_max_threshold
        ext.crop    = true
        ext.dilate  = false
    }

    withName: "PREPROC:PREPROC_DWI:N4_DWI" {
        ext.nb_voxels_between_knots = params.dwi_n4_knot_interval
        ext.shrink_factor           = params.dwi_n4_subsampling
    }

    withName: "PREPROC:PREPROC_DWI:RESAMPLE_DWI" {
        ext.voxel_size      = params.dwi_resample_resolution_mm_iso
        ext.interp          = params.dwi_resample_interpolation
        ext.first_suffix    = "dwi"
    }

    withName: "PREPROC:PREPROC_DWI:IMAGE_CROPVOLUME" {
        ext.output_bbox = false
    }

    withName: "PREPROC:PREPROC_DWI:RESAMPLE_MASK" {
        ext.voxel_size      = false
        ext.interp          = "nn"
        ext.first_suffix    = "dwi_mask"
    }

    //withName: "ANATOMICAL_SEGMENTATION:SEGMENTATION_FASTSEG" {
        // Nothing to do !
    //}

    //withName: "ANATOMICAL_SEGMENTATION:SEGMENTATION_FREESURFERSEG" {
        // Nothing to do !
    //}

    withName: "RECONST_FRF" {
        ext.fa          = params.frf_fa_max_threshold
        ext.fa_min      = params.frf_fa_min_threshold
        ext.nvox_min    = params.frf_min_n_voxels
        ext.roi_radius  = params.frf_roi_radius
        ext.set_frf     = params.frf_value_to_force ? true : false
        ext.manual_frf  = params.frf_value_to_force
    }

    //withName: "RECONST_MEANFRF" {
        // Nothing to do !
    //}

    withName: "RECONST_DTIMETRICS" {
        ext.ad                  = true
        ext.evecs               = true
        ext.evals               = true
        ext.fa                  = true
        ext.ga                  = true
        ext.rgb                 = true
        ext.md                  = true
        ext.mode                = true
        ext.norm                = true
        ext.rd                  = true
        ext.tensor              = true
        ext.nonphysical         = true
        ext.pulsation           = true
        ext.residual            = true
        ext.max_dti_shell_value = params.dti_max_bvalue
        ext.dti_shells          = params.dti_shells_to_fit
    }

    withName: "RECONST_FODF" {
        ext.b0_thr_extract_b0       = params.b0_max_threshold
        ext.bvalue_tolerance        = params.bvalue_tolerance
        ext.min_fodf_shell_value    = params.fodf_min_bvalue
        ext.fodf_shells             = params.fodf_shells_to_fit
        ext.sh_order                = params.fodf_sh_order
        ext.sh_basis                = params.fodf_sh_basis
        ext.fa_threshold            = params.fodf_peaks_ventricle_max_fa
        ext.md_threshold            = params.fodf_peaks_ventricle_min_md
        ext.relative_threshold      = params.fodf_peaks_relative_threshold
        ext.fodf_metrics_a_factor   = params.fodf_peaks_absolute_factor
        ext.absolute_peaks          = true
        ext.peaks                   = true
        ext.peak_indices            = true
        ext.afd_max                 = true
        ext.afd_total               = true
        ext.afd_sum                 = true
        ext.nufo                    = true
    }

}
